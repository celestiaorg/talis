---
- name: Get volume information
  command: lsblk -J
  register: lsblk_output
  changed_when: false

- name: Parse volume information
  set_fact:
    volumes: "{{ lsblk_output.stdout | from_json }}"

- name: Debug volume information
  debug:
    var: volumes
    verbosity: 2

- name: Set volume facts
  set_fact:
    volume_device: "{{ volume_device | default('/dev/sda') }}"
    volume_mount_point: "{{ volume_mount_point | default('/mnt/data') }}"
    volume_fstype: "{{ volume_fstype | default('ext4') }}"

- name: Create mount points
  file:
    path: "{{ volume_mount_point }}"
    state: directory
    mode: '0755'

- name: Check if filesystem exists on volume
  command: "blkid -s TYPE -o value {{ volume_device }}"
  register: blkid_output
  changed_when: false
  failed_when: false
  when: volumes.blockdevices | selectattr('name', 'equalto', volume_device | basename) | list | length > 0

- name: Format volumes if needed
  filesystem:
    fstype: "{{ volume_fstype }}"
    dev: "{{ volume_device }}"
  when: 
    - volumes.blockdevices | selectattr('name', 'equalto', volume_device | basename) | list | length > 0
    - blkid_output.stdout == ""

- name: Mount volumes
  mount:
    path: "{{ volume_mount_point }}"
    src: "{{ volume_device }}"
    fstype: "{{ volume_fstype }}"
    state: mounted
  when: volumes.blockdevices | selectattr('name', 'equalto', volume_device | basename) | list | length > 0
